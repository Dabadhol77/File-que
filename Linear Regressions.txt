import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression

# Generate some sample data
np.random.seed(0)
x = np.linspace(0, 10, 100)
y = 3 * x + np.random.normal(0, 1, size=100)

# Plot the data
plt.scatter(x, y)
plt.xlabel('x')
plt.ylabel('y')
plt.show()

# Split the data into training and testing sets
x_train, y_train = x[:80].reshape(-1, 1), y[:80].reshape(-1, 1)
x_test, y_test = x[80:].reshape(-1, 1), y[80:].reshape(-1, 1)

# Create a LinearRegression object and fit the model to the training data
model = LinearRegression()
model.fit(x_train, y_train)

# Make predictions on the testing data and compute the mean squared error
y_pred = model.predict(x_test)
mse = np.mean((y_pred - y_test) ** 2)
print('Mean squared error:', mse)

# Plot the predicted line along with the original data
plt.scatter(x_test, y_test)
plt.plot(x_test, y_pred, color='red')
plt.xlabel('x')
plt.ylabel('y')
plt.show()
